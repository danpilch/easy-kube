---
- name: Generate join control plane cert from first master
  shell: "kubeadm alpha certs certificate-key"
  register: kubeadm_join_control_plane_cert
  when: inventory_hostname in groups['kubernetes_master'][0]
  tags: kubeadm_join_control_plane_command

- set_fact:
    kubeadm_certificate_key: "{{ hostvars[groups['kubernetes_master'][0]].kubeadm_join_control_plane_cert.stdout_lines[-1] }}"

- name: Generate kubeadm config file
  template:
    src: "kubeadm_config.yaml.j2"
    dest: "/tmp/kubeadm_config.yaml"
  tags: generate_kubeadm_config

- name: Start master node
  shell: "kubeadm init --config /tmp/kubeadm_config.yaml {% if control_plane_multi_master|bool %}--upload-certs{% endif %}"
  register: kubeadm_init
  when: inventory_hostname in groups['kubernetes_master'][0]
  tags: init_kubernetes_master

- name: Generate master join command from master
  shell: "kubeadm token create --print-join-command --certificate-key {{ kubeadm_certificate_key }}"
  register: kubeadm_join_control_plane_command
  when: inventory_hostname in groups['kubernetes_master'][0]
  tags: kubeadm_join_control_plane_command

- name: Generate worker join command from master
  shell: "kubeadm token create --print-join-command"
  register: kubeadm_join_worker_command
  when: inventory_hostname in groups['kubernetes_master'][0]
  tags: init_kubernetes_master

- name: Get k8s version
  shell: "kubectl --kubeconfig /etc/kubernetes/admin.conf version | base64 -w 0"
  register: k8s_version
  when: inventory_hostname in groups['kubernetes_master'][0]
  tags: get_k8s_version

- name: Install overlay network
  shell: "kubectl --kubeconfig /etc/kubernetes/admin.conf apply -f 'https://cloud.weave.works/k8s/net?k8s-version={{ hostvars[groups['kubernetes_master'][0]].k8s_version.stdout }}'"
  when: inventory_hostname in groups['kubernetes_master'][0]
  tags: install_weave_overlay_network

- name: Start secondary master nodes
  shell: "{{ hostvars[groups['kubernetes_master'][0]].kubeadm_join_control_plane_command.stdout_lines[-1] }}"
  when: inventory_hostname in groups['kubernetes_master'][1:] and control_plane_multi_master|bool
  tags: init_secondary_kubernetes_masters

- name: Create kubeconfig directory in vagrant user directory
  file:
    path: "/home/vagrant/.kube/"
    state: directory 
    mode: 0755
    owner: vagrant
    group: vagrant
  when: inventory_hostname in groups['kubernetes_master']
  tags: copy_kubeconfig

- name: Copy kubectl admin config file to vagrant user directory
  copy:
    src: "/etc/kubernetes/admin.conf"
    dest: "/home/vagrant/.kube/config"
    remote_src: true
    owner: vagrant
    group: vagrant
  when: inventory_hostname in groups['kubernetes_master'][0]
  tags: copy_kubeconfig

- name: Add kubectl autocompletion to bashrc for vagrant user
  lineinfile:
    dest: "/home/vagrant/.bashrc"
    line: "source <(kubectl completion bash)"
    state: present
  when: inventory_hostname in groups['kubernetes_master']
  tags: add_kubectl_completion
